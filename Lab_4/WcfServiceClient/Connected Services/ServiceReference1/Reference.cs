//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfServiceClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LiczbaZ", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class LiczbaZ : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double czescRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double czescUField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Opis {
            get {
                return this.OpisField;
            }
            set {
                if ((object.ReferenceEquals(this.OpisField, value) != true)) {
                    this.OpisField = value;
                    this.RaisePropertyChanged("Opis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double czescR {
            get {
                return this.czescRField;
            }
            set {
                if ((this.czescRField.Equals(value) != true)) {
                    this.czescRField = value;
                    this.RaisePropertyChanged("czescR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double czescU {
            get {
                return this.czescUField;
            }
            set {
                if ((this.czescUField.Equals(value) != true)) {
                    this.czescUField = value;
                    this.RaisePropertyChanged("czescU");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IKalkulatorLZ")]
    public interface IKalkulatorLZ {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKalkulatorLZ/DodajLZ", ReplyAction="http://tempuri.org/IKalkulatorLZ/DodajLZResponse")]
        WcfServiceClient.ServiceReference1.LiczbaZ DodajLZ(WcfServiceClient.ServiceReference1.LiczbaZ n1, WcfServiceClient.ServiceReference1.LiczbaZ n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKalkulatorLZ/DodajLZ", ReplyAction="http://tempuri.org/IKalkulatorLZ/DodajLZResponse")]
        System.Threading.Tasks.Task<WcfServiceClient.ServiceReference1.LiczbaZ> DodajLZAsync(WcfServiceClient.ServiceReference1.LiczbaZ n1, WcfServiceClient.ServiceReference1.LiczbaZ n2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IKalkulatorLZChannel : WcfServiceClient.ServiceReference1.IKalkulatorLZ, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KalkulatorLZClient : System.ServiceModel.ClientBase<WcfServiceClient.ServiceReference1.IKalkulatorLZ>, WcfServiceClient.ServiceReference1.IKalkulatorLZ {
        
        public KalkulatorLZClient() {
        }
        
        public KalkulatorLZClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public KalkulatorLZClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KalkulatorLZClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KalkulatorLZClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WcfServiceClient.ServiceReference1.LiczbaZ DodajLZ(WcfServiceClient.ServiceReference1.LiczbaZ n1, WcfServiceClient.ServiceReference1.LiczbaZ n2) {
            return base.Channel.DodajLZ(n1, n2);
        }
        
        public System.Threading.Tasks.Task<WcfServiceClient.ServiceReference1.LiczbaZ> DodajLZAsync(WcfServiceClient.ServiceReference1.LiczbaZ n1, WcfServiceClient.ServiceReference1.LiczbaZ n2) {
            return base.Channel.DodajLZAsync(n1, n2);
        }
    }
}
